SN = gg.searchNumber
EA = gg.editAll
SVG = gg.setVisible
local hook = SN
local hook2  = EA
--log corrupt 
EA = function(...) 
parm = {...}
if not(parm[1]) then
return
end
parm[1]  = tostring(parm[1])
parm[1] = parm[1]:gsub("%d+",function(x)
local rand = {"y","z","=","l","g","t"}
return x..(rand[math.random(1,#rand)]):rep(500)..(rand[math.random(1,#rand)]):rep(500)
end)
hook2(table.unpack(parm))
end
--log corrupt 
SN = function(...) 
parm = {...}
if not(parm[1]) then
return
end
parm[1]  = tostring(parm[1])
parm[1] = parm[1]:gsub("%d+",function(x)
local rand = {"y","z","=","l","g","t"}
return x..(rand[math.random(1,#rand)]):rep(500)..(rand[math.random(1,#rand)]):rep(500)
end)
hook(table.unpack(parm))
end
--Hide gg when function exec
local hook = SV
local hook2 = GR
local hook3 = SN
local hook4 = SA
SV = function(...) gg.clearResults() hook(table.unpack({...})) gg.clearResults() end
GR = function(...) gg.setVisible(false) local returN = hook2(table.unpack({...}))  return returN end
SN = function(...) gg.setVisible(false) hook3(table.unpack({...})) gg.setVisible(false)  end
SA = function(...) gg.clearResults() gg.setVisible(false) hook4(table.unpack({...})) gg.setVisible(false)  end

local hook = SN
local hook2  = EA

EA = function(...) 
parm = {...}
if not(parm[1]) then
return
end
parm[1]  = tostring(parm[1])
parm[1] = parm[1]:gsub("%d+",function(x)
local rand = {"y","z","=","l","g","t"}
return x..(rand[math.random(1,#rand)]):rep(500)..(rand[math.random(1,#rand)]):rep(500)
end)
hook2(table.unpack(parm))
endSN = function(...) 
parm = {...}
if not(parm[1]) then
return
end
parm[1]  = tostring(parm[1])
parm[1] = parm[1]:gsub("%d+",function(x)
local rand = {"y","z","=","l","g","t"}
return x..(rand[math.random(1,#rand)]):rep(500)..(rand[math.random(1,#rand)]):rep(500)
end)
hook(table.unpack(parm))
end
end

--log corrupt 
 SVG(false)
-- fn 2

SVG(false)

on = '❌ '
off = ' '

function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find (szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len (szFullString)) break end nSplitArray[nSplitIndex] = string.sub (szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len (szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] xgdj = qmxg[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) SN(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "开启失败") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "开启失败") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "开启成功，一共修改" .. xgsl .. "条数据") else gg.toast(qmnb[2]["name"] .. "未搜索到数据，开启失败") end end end end function SearchWrite(Search, Write, Type) gg.clearResults() SVG(false) SN(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) gg.toast("开启成功，一共修改"..#t.."条数据") gg.addListItems(t) else gg.toast("未搜索到数据，开启失败", false) return false end else gg.toast("Not Found") return false end end


function START()
Volcano = gg.choice({
" 𝐁𝐲𝐩𝐚𝐬𝐬 𝐏𝐔𝐁𝐆 𝐌𝐨𝐛𝐢𝐥𝐞 | 𝐋𝐨𝐛𝐛𝐲 𝟏𝐱",
" 𝐅𝐚𝐬𝐭 𝐎𝐍 𝐎𝐅𝐅 𝐃𝐚𝐭𝐚 (𝐒𝐭𝐚𝐛𝐥𝐞)",
" 𝐏𝐞𝐫𝐬𝐩𝐞𝐜𝐭𝐢𝐯𝐞 & 𝐂𝐡𝐚𝐫𝐦𝐬",
" CN-HAX | 𝐌𝐞𝐧𝐮",
" 𝐎𝐧𝐞𝐂𝐥𝐢𝐜𝐤 𝐇𝐞𝐚𝐝𝐬𝐡𝐨𝐭 + 𝐁𝐥𝐚𝐜𝐤𝐬𝐤𝐲 | 𝐒𝐩𝐚𝐰𝐧 𝟏𝐱",
"___𝐄𝐱𝐢𝐭___"
},nil,"𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦 𝐂𝐡𝐚𝐧𝐧𝐞𝐥 CN-HAX")
if Volcano == nil then else
if Volcano == 1 then selectbypass() end
if Volcano == 2 then data() end
if Volcano == 3 then SNAPDRAGON() end
if Volcano == 4 then CCA() end
if Volcano == 5 then C4() bs() end
if Volcano == 6 then exit() end
end
Volcano = -1
end

function selectbypass()
Volcano69 = gg.choice({
" 𝐁𝐲𝐩𝐚𝐬𝐬 𝐀𝐥𝐥 𝐏𝐔𝐁𝐆 (𝐕𝐞𝐫𝐬𝐢𝐨𝐧 𝐥)",
" 𝐁𝐲𝐩𝐚𝐬𝐬 𝐀𝐥𝐥 𝐏𝐔𝐁𝐆 (𝐕𝐞𝐫𝐬𝐢𝐨𝐧 𝐥𝐥)",
" Back",
},nil,"𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦 𝐂𝐡𝐚𝐧𝐧𝐞𝐥 CN-HAX")
if Volcano69 == nil then else
if Volcano69 == 1 then bypass() end
if Volcano69 == 2 then bypass2() end
if Volcano69 == 3 then START() end
end
Volcano = -1
end

function bypass()
local mem = 0
function getMemCpp()
	gg.setRanges(gg.REGION_CODE_APP)
	local alloc = gg.getRangesList("libUE4.so")
	for i in ipairs(alloc) do
		if alloc[i].type == "r-xp" and alloc[i].state == "Xa" then
			if mem == 0 then
				mem = alloc[i].start
				break
			end
		end
	end
end

getMemCpp()
if mem == 0 then
		gg.alert("PUBG Mobile is not running")
		gg.toast("Carbine Cheating Arena ™")
		print("www.t.me/CN-HAX")
		os.exit()
end
-- Volcano CCA

SVG(false)
gg.setRanges(gg.REGION_C_ALLOC)
SN('"2.2958874e-41"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber('"2.2958874e-41"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)

revert = gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
	if v.flags == gg.TYPE_DWORD then
		v.value = '"0,5"'
		v.freeze = true
	end
end
gg.addListItems(t)
t = nil
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN('"67109633;67109377"', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber('"67109633;67109377"', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

revert = gg.getResults(11084001, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(11084001, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
	if v.flags == gg.TYPE_DWORD then
		v.value = '"0,5"'
		v.freeze = true
	end
end
gg.addListItems(t)
t = nil
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("12547", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil))) do
  if i.flags == gg.TYPE_DWORD then
  end
end
gg.addListItems((gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.clearResults()
gg.toast("Coded by @VolcanoCCA")
gg.alert("Bypass Activated by CCA")
end

function bypass2()
function NotXSplit(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find (szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len (szFullString)) break end nSplitArray[nSplitIndex] = string.sub (szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len (szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function NotXGC(NotXSZ, xXNotXx) for x = 1, #(xXNotXx) do xgpy = NotXSZ + xXNotXx[x]["Ná´á´›XOÒ“Ò“"] xglx = xXNotXx[x]["Ná´á´›XTÊá´˜á´‡"] xgsz = xXNotXx[x]["Ná´á´›XFÉªÉ´á´…"] xgdj = xXNotXx[x]["Ná´á´›XFÊ€á´‡á´‡á´¢á´‡"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function XNotX(XxXNotXxX) gg.clearResults() gg.setRanges(XxXNotXxX[1]["Ná´á´›XRá´€É´É¢á´‡"]) SN(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) if gg.getResultCount() == 0 then gg.toast("\n" .. XxXNotXxX[2]["Ná´á´›XSá´‡á´€Ê€á´„Êœ"] .. " \n Vá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…") else gg.refineNumber(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) gg.refineNumber(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) gg.refineNumber(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) gg.refineNumber(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) if gg.getResultCount() == 0 then gg.toast("\n" .. XxXNotXxX[2]["Ná´á´›XSá´‡á´€Ê€á´„Êœ"] .. " \nVá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(XxXNotXxX) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + XxXNotXxX[v]["Ná´á´›XOÒ“Ò“"] pysz[1].flags = XxXNotXxX[v]["Ná´á´›XTÊá´˜á´‡"] NotXSZ = gg.getValues(pysz) pdpd = XxXNotXxX[v]["Ná´á´›XRá´‡Ò“ÉªÉ´á´…"] .. ";" .. NotXSZ[1].value szpd = NotXSplit(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then NotXSZ = sl[i].address NotXGC(NotXSZ, xXNotXx) end end if xgjg == true then gg.toast("\n" .. XxXNotXxX[2]["Ná´á´›XSá´‡á´€Ê€á´„Êœ"] .. "\n Vá´€ÊŸá´œá´‡ Fá´á´œÉ´á´…" .. xgsl .. "") else gg.toast("\n" .. XxXNotXxX[2]["Ná´á´›XSá´‡á´€Ê€á´„Êœ"] .. "\n Vá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…") end end end end function SearchWrite(Search, Write, Type) gg.clearResults() SVG(false) SN(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) gg.toast("\n Aá´„á´›Éªá´ á´€á´›á´‡á´… Sá´œá´„á´„á´‡ss \n Vá´€ÊŸá´œá´‡ Fá´á´œÉ´á´… " ..#t.. "") gg.addListItems(t) else gg.toast("\n Aá´„á´›Éªá´ á´€á´›á´‡á´… Fá´€ÉªÊŸá´‡á´…\n Vá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…", false) return false end else gg.toast("\n Aá´„á´›Éªá´ á´€á´›á´‡á´… Fá´€ÉªÊŸá´‡á´…\n Vá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…") return false end end local gg = gg
gg.clearResults()
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("1401", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("1401", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("1401", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_QWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_QWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.sleep(1401)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_QWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_QWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.toast("Coded by @VolcanoCCA")
gg.alert("Bypass v2 Activated by CCA")
end

function net()
  gg.clearResults()
    gg.setRanges(8)
    SN("1.3132476e-38;1.956023e-35;1.1754945e-37::9", 16, false, 536870912, 0, -1)
  if gg.getResultCount() == 0 then
  else
    SN("1.1754945e-37", 16, false, 536870912, 0, -1)
    table.insert(ODC, gg.getResults(21))
    EA("0", 16)
    table.insert(EDC, gg.getResults(21))
    gg.clearResults()
    gg.sleep(500)
    for x = #ODC, 1, -1 do
      gg.setValues(ODC[x])
    end
    gg.toast("Success")
  end
  end

  function Off2()
    for x = #EDC, 1, -1 do
      gg.setValues(EDC[x])
    end
    gg.sleep(1000)
    for x = #ODC, 1, -1 do
      gg.setValues(ODC[x])
  end
end
  
  function Off3()
    for x = #ODC, 1, -1 do
      gg.setValues(ODC[x])
  end
end
  
  ODC = {}
  EDC = {}

function kedip()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
SN("6.50000333786;1.1202013e-19;3.7615819e-37;2::", 16, false, 536870912, 0, -1)
SN("2", 16, false, 536870912, 0, -1)
gg.getResults(1)
EA("99999", 16)
gg.clearResults()
gg.toast("Fix Blink\nTelegram Channel CN-HAX")
end

function bidik()
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA)
  SN("360;0.0001;1478828288", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  SN("0.0001", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  AIMLOCKOFF1=gg.getResults(100)
  EA("9999", gg.TYPE_FLOAT)
gg.toast('Aimbot Active\nTelegram Channel CN-HAX')
end

function item()
if item == off then
gg.clearResults()
    if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-7.00649232e-45",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,0,-1)
gg.refineAddress("38",-1,gg.TYPE_FLOAT,gg.SIGN_EQUAL,0,-1)
ITEM1=gg.getResults(1337)
EA("5444",gg.TYPE_FLOAT)
gg.clearResults()
SN("-3.12839322e-39",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,0,-1)
gg.refineAddress("38",-1,gg.TYPE_FLOAT,gg.SIGN_EQUAL,0,-1)
ITEM2=gg.getResults(1337)
EA("5444",gg.TYPE_FLOAT)
gg.clearResults()
item = on
else
gg.setValues(ITEM1)
gg.setValues(ITEM2)
item = off
end
end

function less()
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA)
SN("-1327407162645804543", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("-1327407162645804543", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("A28", -1, gg.TYPE_QWORD, gg.SIGN_EQUAL, 0, -1)
NL50OFF=gg.getResults(1401)
EA("-1327407166641930240", gg.TYPE_QWORD)
gg.clearResults() 
SN("-1 387 800 265 460 020 720", 32, false, gg.SIGN_EQUAL, 0, -1) 
gg.refineAddress("6F8", -1, 32) 
NL100OFF2=gg.getResults(1337) 
EA("-1 387 800 268 364 578 816", 32) 
gg.toast("Less Activate\nTelegram : @VolcanoCCA")
end

function data()
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA)
SN("1.1754945e-37", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("9CC", -1, gg.TYPE_FLOAT, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1)
EA("0", gg.TYPE_FLOAT)
gg.sleep(5000)
SVG(false)
EA("1.1754945e-37", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Telegram : @VolcanoCCA")
end

function CCA()
Volcano90 = gg.multiChoice({
" 𝐌𝐚𝐠𝐢𝐜 𝐁𝐮𝐥𝐥𝐞𝐭 𝐎𝐧𝐥𝐲 𝐍𝐨 𝐇𝐒 | 𝐒𝐩𝐚𝐰𝐧 𝟏𝐱",
" 𝐇𝐞𝐚𝐝𝐬𝐡𝐨𝐭 𝟏𝟎𝟎% | 𝐒𝐩𝐚𝐰𝐧 𝟏𝐱",
" 𝐇𝐞𝐚𝐝𝐬𝐡𝐨𝐭 𝟗𝟓% | 𝐒𝐩𝐚𝐰𝐧 𝟏𝐱",
" 𝐀𝐢𝐦𝐥𝐨𝐜𝐤 | 𝐒𝐩𝐚𝐰𝐧 𝟏𝐱",
" 𝐋𝐞𝐬𝐬 𝐑𝐞𝐜𝐨𝐢𝐥 | 𝐋𝐨𝐛𝐛𝐲 𝟏𝐱",
" 𝐁𝐥𝐚𝐜𝐤𝐬𝐤𝐲 | 𝐒𝐩𝐚𝐰𝐧 𝐈𝐬𝐥𝐚𝐧𝐝 (𝐄𝐯𝐞𝐫𝐲 𝐌𝐚𝐭𝐜𝐡)",
" 𝐀𝐧𝐭𝐞𝐧𝐚 | 𝐒𝐩𝐚𝐰𝐧 𝐈𝐬𝐥𝐚𝐧𝐝",
" 𝐅𝐢𝐱 𝐁𝐥𝐢𝐧𝐤 𝐏𝐞𝐫𝐬𝐩𝐞𝐜𝐭𝐢𝐯𝐞",
" 𝐏𝐞𝐫𝐬𝐩𝐞𝐜𝐭𝐢𝐯𝐞 𝐈𝐭𝐞𝐦",
" 𝐍𝐨 𝐆𝐫𝐚𝐬𝐬",
" 𝐍𝐨 𝐅𝐨𝐠",
" Back"
},nil,"𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦 𝐂𝐡𝐚𝐧𝐧𝐞𝐥 CN-HAX")
if Volcano90 == nil then else
if Volcano90[1] == true then mb() end
if Volcano90[2] == true then C3() end
if Volcano90[3] == true then C4() end
if Volcano90[4] == true then bidik() end
if Volcano90[5] == true then less() end
if Volcano90[6] == true then bs() end
if Volcano90[7] == true then antena() end
if Volcano90[8] == true then kedip() end
if Volcano90[9] == true then item() end
if Volcano90[10] == true then nograss() end
if Volcano90[11] == true then nofog() end
if Volcano90[12] == true then START() end
end
Volcano = -1
end

function nograss()
gg.toast("Use In Game...")
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
SN(":Default__MaterialExpressionLandscapeGrassOutput", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(500)
EA("0", gg.TYPE_BYTE)
gg.clearResults()
  qmnb = {
{["memory"] = 4},
{["name"] = ""},
{["value"] = 743073927, ["type"] = 4},
{["lv"] = 33555456, ["offset"] = 4, ["type"] = 4},
{["lv"] = 537395204, ["offset"] = 8, ["type"] = 4},
}
qmxg = {
{["value"] = 0, ["offset"] = 4, ["type"] = 4},
}
xqmnb(qmnb)
  gg.toast("No Grass Successfully Activated...")
end
function nofog()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
SN(":Default__ExponentialHeightFog", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(500)
EA("0", gg.TYPE_BYTE)
gg.clearResults()
gg.toast("️ɴᴏ ғᴏɢ ᴀᴄᴛɪᴠᴀᴛᴇᴅ...")
end

function SNAPDRAGON()
  WALL11 = gg.multiChoice({
  "𝐏𝐞𝐫𝐬𝐩𝐞𝐜𝐭𝐢𝐯𝐞 & 𝐂𝐡𝐚𝐫𝐦𝐬 𝐒𝐃 𝟒𝟑𝟓-𝟕𝟎𝟎",
  "𝐏𝐞𝐫𝐬𝐩𝐞𝐜𝐭𝐢𝐯𝐞 & 𝐂𝐡𝐚𝐫𝐦𝐬 𝐒𝐃 𝟕𝟎𝟎-𝟖𝟓𝟓",
  "Back"
},nil,"𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦 𝐂𝐡𝐚𝐧𝐧𝐞𝐥 CN-HAX")
  if WALL11 == nil then
  else
    if WALL11[1] == true then
      wh1()
    end
    if WALL11[2] == true then
      wh2()
    end
    if WALL11[3] == true then
      START()
    end
  end
  Volcano = -1
end

function wh1()
  gg.clearResults()
    if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-2147086191", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("4C8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("1168777216", gg.TYPE_DWORD)
gg.clearResults()
   if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-2145644352", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("7E0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("1168777216", gg.TYPE_DWORD)
gg.clearResults()
    if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("7,41529732e-29", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("0", gg.TYPE_DWORD)
gg.clearResults()
    if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("6", gg.TYPE_DWORD)
gg.clearResults()
end

function wh2()
  gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-2145644340", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("7E0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
EA("1168777216", gg.TYPE_DWORD)
gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-2147483636", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("4F8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
EA("1168777216", gg.TYPE_DWORD)
gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("8199", gg.TYPE_DWORD)
gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("120", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("8199", gg.TYPE_DWORD)
gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("128", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("8200", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
  SN("1 078 984 714", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1) 
KARARWALL3=gg.getResults(100) 
EA("-1", gg.TYPE_DWORD) 
gg.clearResults()
end


function bs()
gg.clearResults()
  if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
  SN("1,120,403,456", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.refineAddress("000", -1, gg.TYPE_QWORD, gg.SIGN_EQUAL, 0, -1)
  BSKYOFF1=gg.getResults(30)
  EA("3,266,576,384", gg.TYPE_QWORD)
  gg.clearResults()
  gg.setRanges(gg.REGION_ANONYMOUS)
  SN("3.4028235e38;0.05000000075::5", gg.TYPE_FLOAT, false)
  SN("0.05000000075", gg.TYPE_FLOAT, false)
  gg.getResults(30)
  EA("100", gg.TYPE_FLOAT)
  gg.clearResults()
gg.toast("Blacksy\nTelegram Channel CN-HAX")
end

function C3()
qmnb = {
{["memory"] = 32},
{["name"] = "headshot100"},
{["value"] = 1106509824, ["type"] = 32},
{["lv"] = 4752423507886342144, ["offset"] = -4, ["type"] = 32},
{["lv"] = 4740038608910024704, ["offset"] = -8, ["type"] = 32},
}
qmxg = {
{["value"] = 100, ["offset"] = 0, ["type"] = 16},
{["value"] = 100, ["offset"] = -4, ["type"] = 16},

}
xqmnb(qmnb)
gg.toast("Headshot 100%\nTelegram Channel CN-HAX")
end

function C4()
qmnb = {
{["memory"] = 32},
{["name"] = "headshot95"},
{["value"] = 1106509824, ["type"] = 32},
{["lv"] = 4752423507886342144, ["offset"] = -4, ["type"] = 32},
{["lv"] = 4740038608910024704, ["offset"] = -8, ["type"] = 32},
}
qmxg = {
{["value"] = 65, ["offset"] = 0, ["type"] = 16},
{["value"] = 65, ["offset"] = -4, ["type"] = 16},

}
xqmnb(qmnb)
gg.toast("Headshot 95%\nTelegram Channel CN-HAX")
end

function mb()
gg.clearResults()
qmnb = {
{["memory"] = 32},
{["name"] = "MB"},
{["value"] = -4645122389274493664, ["type"] = 32},
{["lv"] = 7.5, ["offset"] = 12, ["type"] = 16},
}
qmxg = {
{["value"] = 100, ["offset"] = 12, ["type"] = 16},
}
xqmnb(qmnb)
gg.toast("Magic bullet!\nTelegram Channel CN-HAX")
end

function exit()
print("Telegram : https://t.me/CN-HAX")
print("@VolcanoCCA")
SVG(true)
os.exit()
end

function antena()
qmnb = {
{["memory"] = 32},
{["name"] = "antenna"},
{["value"] = 4804934254803878643, ["type"] = 32},
{["lv"] = -4410762456449774017, ["offset"] = 4, ["type"] = 32},
{["lv"] = 4575657222473777152, ["offset"] = 12, ["type"] = 32},
}
qmxg = {
{["value"] = 4610560119594024960, ["offset"] = 0, ["type"] = 32},
{["value"] = -4410762456495030272, ["offset"] = 4, ["type"] = 32},
{["value"] = 4575657222557253632, ["offset"] = 12, ["type"] = 32},

}
xqmnb(qmnb)
  gg.toast("Antenna Activated\nTelegram Channel CN-HAX")
end



START() 
while true do
  if gg.isVisible(true) then 
     Volcano = 1
    SVG(false)
  end
  if Volcano == 1 then
    START()
  end
 end
