SN = gg.searchNumber
EA = gg.editAll
SVG = gg.setVisible
local hook = SN
local hook2  = EA
--log corrupt 
EA = function(...) 
parm = {...}
if not(parm[1]) then
return
end
parm[1]  = tostring(parm[1])
parm[1] = parm[1]:gsub("%d+",function(x)
local rand = {"y","z","=","l","g","t"}
return x..(rand[math.random(1,#rand)]):rep(500)..(rand[math.random(1,#rand)]):rep(500)
end)
hook2(table.unpack(parm))
end
--log corrupt 
SN = function(...) 
parm = {...}
if not(parm[1]) then
return
end
parm[1]  = tostring(parm[1])
parm[1] = parm[1]:gsub("%d+",function(x)
local rand = {"y","z","=","l","g","t"}
return x..(rand[math.random(1,#rand)]):rep(500)..(rand[math.random(1,#rand)]):rep(500)
end)
hook(table.unpack(parm))
end
--Hide gg when function exec
local hook = SV
local hook2 = GR
local hook3 = SN
local hook4 = SA
SV = function(...) gg.clearResults() hook(table.unpack({...})) gg.clearResults() end
GR = function(...) gg.setVisible(false) local returN = hook2(table.unpack({...}))  return returN end
SN = function(...) gg.setVisible(false) hook3(table.unpack({...})) gg.setVisible(false)  end
SA = function(...) gg.clearResults() gg.setVisible(false) hook4(table.unpack({...})) gg.setVisible(false)  end

local hook = SN
local hook2  = EA

EA = function(...) 
parm = {...}
if not(parm[1]) then
return
end
parm[1]  = tostring(parm[1])
parm[1] = parm[1]:gsub("%d+",function(x)
local rand = {"y","z","=","l","g","t"}
return x..(rand[math.random(1,#rand)]):rep(500)..(rand[math.random(1,#rand)]):rep(500)
end)
hook2(table.unpack(parm))
endSN = function(...) 
parm = {...}
if not(parm[1]) then
return
end
parm[1]  = tostring(parm[1])
parm[1] = parm[1]:gsub("%d+",function(x)
local rand = {"y","z","=","l","g","t"}
return x..(rand[math.random(1,#rand)]):rep(500)..(rand[math.random(1,#rand)]):rep(500)
end)
hook(table.unpack(parm))
end
end

--log corrupt 
 SVG(false)
-- fn 2

SVG(false)

function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find (szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len (szFullString)) break end nSplitArray[nSplitIndex] = string.sub (szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len (szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] xgdj = qmxg[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) SN(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "开启失败") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "开启失败") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "开启成功，一共修改" .. xgsl .. "条数据") else gg.toast(qmnb[2]["name"] .. "未搜索到数据，开启失败") end end end end function SearchWrite(Search, Write, Type) gg.clearResults() SVG(false) SN(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) gg.toast("开启成功，一共修改"..#t.."条数据") gg.addListItems(t) else gg.toast("未搜索到数据，开启失败", false) return false end else gg.toast("Not Found") return false end end

function START()
Volcano = gg.choice({
"🎇 Memory Bypass | Lobby 1x",
"🎢 Fast On/Off Data | Stable",
"🎢 Wallhack & Colors",
"🌉 Cheat Menu | Lobby/Game",
"🎢 OneClick Headshot & Blacksky",
"exit"
},nil,"Telegram Channel : @CarbineCheatingArena \n Coded by @VolcanoCCA\n")
if Volcano == nil then else
if Volcano == 1 then selectbypass() end
if Volcano == 2 then data() end
if Volcano == 3 then wh() end
if Volcano == 4 then CCA() end
if Volcano == 5 then C4() bs() end
if Volcano == 6 then exit() end
end
Volcano = -1
end

function selectbypass()
Volcano69 = gg.choice({
" Bypass All PUBG (𝐕𝐞𝐫𝐬𝐢𝐨𝐧 𝐥)",
" Bypass All PUBG (𝐕𝐞𝐫𝐬𝐢𝐨𝐧 𝐥𝐥)",
" Bypass All PUBG (𝐕𝐞𝐫𝐬𝐢𝐨𝐧 𝐥𝐥𝐥)",
" Bypass All PUBG (𝐕𝐞𝐫𝐬𝐢𝐨𝐧 𝐥𝐥𝐥𝐥)",
" Bypass All PUBG (𝐕𝐞𝐫𝐬𝐢𝐨𝐧 𝐥𝐥𝐥𝐥𝐥)",
" Back",
},nil,"Telegram Channel : @CarbineCheatingArena \n Coded by @VolcanoCCA\n")
if Volcano69 == nil then else
if Volcano69 == 1 then bypass() end
if Volcano69 == 2 then bypass2() end
if Volcano69 == 3 then bypass3() end
if Volcano69 == 4 then bypass4() end
if Volcano69 == 5 then bypass5() end
if Volcano69 == 6 then START() end
end
Volcano = -1
end

bypass5()
------// Team | CCA //-------
os.remove("/.iacovnfld.")
os.remove("/storage/emulated/0/Android/.system_android_l2")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/.fff")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/.system_android_l2")
------// Team | CCA //-------
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/.fff")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/.system_android_l2")
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber('"67109633"', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber('"67109633"', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

revert = gg.getResults(11084001, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(11084001, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
	if v.flags == gg.TYPE_DWORD then
		v.value = '"0"'
		v.freeze = true
	end
end
gg.addListItems(t)
t = nil
  gg.clearResults()
gg.sleep(6000)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("67109633", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.sleep(6000)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("67109377;12547::100", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("12547", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
jg = gg.getResults(100)
sl = gg.getResultCount()
if 50 < sl then
  sl = 50
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("0;0~20;131586::9", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("131586", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
jg = gg.getResults(100)
sl = gg.getResultCount()
if 50 < sl then
  sl = 50
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("67109377;12547::100", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("12547", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
jg = gg.getResults(100)
sl = gg.getResultCount()
------// Team | CCA //-------
if 50 < sl then
  sl = 50
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("0;0~20;131586::9", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("131586", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
jg = gg.getResults(100)
sl = gg.getResultCount()
if 50 < sl then
  sl = 50
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("67109377;12547::100", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("12547", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
jg = gg.getResults(100)
sl = gg.getResultCount()
------// Team | CCA //-------
if 50 < sl then
  sl = 50
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("0;0~20;131586::9", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("131586", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
jg = gg.getResults(100)
sl = gg.getResultCount()
if 50 < sl then
  sl = 50
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("67109377;12547::100", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("12547", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
jg = gg.getResults(100)
sl = gg.getResultCount()
if 50 < sl then
  sl = 50
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("0;0~20;131586::9", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("131586", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
jg = gg.getResults(100)
sl = gg.getResultCount()
if 50 < sl then
  sl = 50
end
for i = 1, sl do
  dzy = jg[i].address
  gg.addListItems({
    [1] = {
      address = dzy,
      flags = gg.TYPE_DWORD,
      freeze = true,
      value = 0
    }
  })
end
------// Team | CCA //-------
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("67109377", gg.TYPE_DWORD)
gg.getResults(50000)
gg.editAll("0", gg.TYPE_DWORD)
gg.clearResults()
------// Team | CCA //-------
os.remove("/.iacovnfld.")
os.remove("/storage/emulated/0/Android/.system_android_l2")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/.fff")
os.remove("/storage/emulated/0/Android/data/com.tencent.ig/files/.system_android_l2")
------// Team | CCA //-------
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/.fff")
os.remove("/storage/emulated/0/Android/data/com.pubg.krmobile/files/.system_android_l2")
gg.alert("Bypass All Version Activated\n Team CCA")
end

function bypass4()
gg.clearResults()
gg.clearList()
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local NotXRapz = gg.getResults(140701)
for i, v in ipairs(NotXRapz) do
    NotXRapz[i].value = '0'
    NotXRapz[i].freeze = true
end
gg.addListItems(NotXRapz)
gg.alert('Latest Bypass Succesfully Activated...\n Team CCA')
gg.clearResults()
gg.clearList()
gg.clearResults()
end

function bypass3()
 function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) break end nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len(szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) xgsl = xgsl + 1 end end function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "开启失败") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "开启失败") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) xgjg = true end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "开启成功,共修改" .. xgsl .. "条数据") else gg.toast(qmnb[2]["name"] .. "开启失败") end end end end
--配置↑↑↑勿修改，调用方法   xqmnb(qmnb)
function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) break end nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len(szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, Loading1) for x = 1, #(Loading1) do xgpy = szpy + Loading1[x]["address"] xglx = Loading1[x]["flags"] xgsz = Loading1[x]["value"] xgdj = Loading1[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function LoadingQ(Loading) gg.setRanges(Loading[1]["memory"]) gg.searchNumber(Loading[3]["value"], Loading[3]["flags"]) if gg.getResultCount() == 0 then gg.toast(Loading[2]["Projects"] .. "Load失败❌") else gg.refineNumber(Loading[3]["value"], Loading[3]["flags"]) gg.refineNumber(Loading[3]["value"], Loading[3]["flags"]) gg.refineNumber(Loading[3]["value"], Loading[3]["flags"]) if gg.getResultCount() == 0 then gg.toast(Loading[2]["Projects"] .. "Load失败❌") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(Loading) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + Loading[v]["address"] pysz[1].flags = Loading[v]["flags"] szpy = gg.getValues(pysz) pdpd = Loading[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, Loading1) end end if xgjg == true then 
end end end end
function edit(orig,ret)_om=orig[1].memory or orig[1][1]_ov=orig[3].value or orig[3][1]_on=orig[2].name or orig[2][1]
gg.clearResults()gg.setRanges(_om)gg.searchNumber(_ov,orig[3].type or orig[3][2])sz=gg.getResultCount()if sz<1 then gg.toast(_on.." 开启失败")else sl=gg.getResults(50000)for i=1,sz do ist=true for v=4,#orig do if ist==true and sl[i].value==_ov then cd={{}}cd[1].address=sl[i].address+(orig[v].offset or orig[v][2])cd[1].flags=orig[v].type or orig[v][3]szpy=gg.getValues(cd)cdlv=orig[v].lv or orig[v][1]cdv=szpy[1].value if cdlv==cdv then pdjg=true ist=true else pdjg=false ist=false end end end if pdjg==true then szpy=sl[i].address for x=1,#(ret)do xgpy=szpy+(ret[x].offset or ret[x][2])xglx=ret[x].type or ret[x][3]xgsz=ret[x].value or ret[x][1]xgdj=ret[x].freeze or ret[x][4]xgsj={{address=xgpy,flags=xglx,value=xgsz}}if xgdj==true then xgsj[1].freeze=xgdj gg.addListItems(xgsj)else gg.setValues(xgsj)end end xgjg=true end end if xgjg==true then gg.toast(_on.." 开启成功")else gg.toast(_on.." 开启失败")end end end
local app = {}
--设置搜索模式
app.memorySearchMode = function(MEMORY) 
         if (MEMORY == 2) then
          gg.setRanges(gg.REGION_JAVA_HEAP | gg.REGION_C_HEAP | gg.REGION_C_ALLOC | gg.REGION_C_DATA | gg.REGION_C_BSS | gg.REGION_PPSSPP) 
          end 
         if (MEMORY == -1) then
          gg.setRanges(gg.REGION_VIDEO) 
          end 
          if (MEMORY == -2) then 
          gg.setRanges(gg.REGION_CODE_APP | gg.REGION_CODE_SYS)         
          end 
          if (MEMORY == 0) then 
          gg.setRanges(gg.REGION_ANONYMOUS)
          end        
          end
function checkType(dataType)	local type 
if dataType =="D" or dataType == "D" then 
type = gg.TYPE_DWORD 
end 
if dataType == "F" then 
type = gg.TYPE_FLOAT 
end 
if dataType == "E" then 
type = gg.TYPE_DOUBLE 
end 
if dataType == "B" or dataType == "B" then 
type =  gg.TYPE_BYTE 
end 
if dataType == "W" or dataType == "W" then 
type = gg.TYPE_WORD os.exit() 
end	
return type 
end
app.memorySearch = function(pkgName, isNewSearch, address, tb, dataType)	
gg.clearResults() 
gg.setVisible(false)	local isSucess = gg.searchNumber(tb[1]["lv"], checkType(dataType), false, gg.SIGN_EQUAL, address, -1);	local t = gg.getResults(9999);	local tab = {}	local data = {}	for i=1, #t do	for j=2, #tb do	tab[j] = {} tab[j].address = t[i].address + tb[j]["offset"] if(tb[j]["type"] == nil) then tab[j].flags = t[i].flags else tab[j].flags = checkType(tb[j]["type"]) end tab = gg.getValues(tab)	if (tab[j].value == tb[j]["lv"]) then data[#data+1] = t[i].address end end	end gg.clearResults() return isSucess, data end app.memoryWrite = function(pkgName, address, value, dataType) gg.setVisible(false)	local t = {}	t[1] ={}	t[1].address = address	t[1].flags = checkType(dataType)	t[1].value = value	return gg.setValues(t) end

GG = {Read,Write} 
function GG.ReadWrite(Read,Writw)TZ = {} dataTZ = Read[1] offset = dataTZ[2] for i=1,#Read do TZA = Read[i] LV = {["lv"] = TZA[1],["offset"] = TZA[2]-offset} table.insert(TZ, i, LV) end app.memorySearchMode(Memory) isSuuess,TUG = app.memorySearch(pkgName, true, 0, TZ, Type) if TUG[1] == nil then  else for ii=1,#TUG do for iii=1,#Write do dataxg = Write[iii] value = dataxg[1] Deviant = dataxg[2] app.memoryWrite(pkgName,TUG[ii]+Deviant-offset,value,Type) end end gg.toast(ID.. "开启成功") end end
function SearchWrite(Search, Write, Type)
    gg.clearResults()
    gg.setVisible(false)
    gg.searchNumber(Search[1][1], Type)
    local t = gg.getResults(9999)
    gg.clearResults()
    if t ~= nil then
        local r = {}
        for j=2, #Search do
            for i, v in ipairs(t) do
                r[i] = {}
                r[i].address = v.address + Search[j][2] - Search[1][2]
                r[i].flags = v.flags
            end
            r = gg.getValues(r)
            for i = #t, 1, -1 do
                if (tostring(r[i].value) ~= tostring(Search[j][1]) ) then
                    table.remove(t, i)
                    table.remove(r, i)
                end
            end       
        end
        --写入数据
        local r = {}
        for i=1, #t do
            for j=1, #Write do
                r[#r+1] = {}
                r[#r].address = t[i].address + Write[j][2] - Search[1][2]
                r[#r].flags = t[i].flags
                r[#r].value = Write[j][1]
                r[#r].freeze = true--冻结的话修改后面加false
       end
       end
         gg.setValues(r)
         end
         end

function SearchWrite(Search, Write, Type) gg.clearResults() gg.setVisible(false) gg.searchNumber(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then gg.toast("🕹:修改"..#data.."条数据.开启成功") local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) else gg.toast("🕹:搜索0条数据.修改失败", false) return false end else gg.toast("🕹:搜索0条数据.修改失败") return false end end

function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find (szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len (szFullString)) break end nSplitArray[nSplitIndex] = string.sub (szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len (szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] xgdj = qmxg[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "开启失败") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "开启失败") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "开启成功,共修改" .. xgsl .. "条数据") else gg.toast(qmnb[2]["name"] .. "开启失败") end end end end 
local app = {}
function Assert(data)
if data == nil or data == "" or data == "nil" then
return false
else
return true
end
end
function mearrass(memory, array)
if Assert(memory) and Assert(array) then
return true
else
return false
end
end
function typetab(array, type)
local datatype = {}
for i = 1, #array do
if Assert(array[i].type) then
table.insert(datatype, i, array[i].type)
else
if Assert(type) then
table.insert(datatype, i, type)
else
return false
end
end
end
return true, datatype
end
function app.memorysearch(memory, array, type)
gg.setVisible(false)
local rx = mearrass(memory, array)
if rx then
local rx, datatype = typetab(array, type)
if rx then
if Assert(array[1].hv) then
gg.clearResults()
gg.setRanges(memory)
gg.searchNumber(array[1].lv .. "~" .. array[1].hv, datatype[1])
else
gg.clearResults()
gg.setRanges(memory)
gg.searchNumber(array[1].lv, datatype[1])
end
if gg.getResultCount() == 0 then
return false
else
local tab = {}
local data = gg.getResults(gg.getResultCount())
gg.clearResults()
for i = 1, #data do
data[i].rx = true
end
for i = 2, #array do
local t = {}
local offset = array[i].offset
for x = 1, #data do
t[#t + 1] = {}
t[#t].address = data[x].address + offset
t[#t].flags = datatype[i]
end
local t = gg.getValues(t)
for z = 1, #t do
if Assert(array[i].hv) then
if tonumber(t[z].value) < tonumber(array[i].lv) or tonumber(t[z].value) > tonumber(array[i].hv) then
data[z].rx = false
end
else
if tostring(t[z].value) ~= tostring(array[i].lv) then
data[z].rx = false
end
end
end
end
for i = 1, #data do
if data[i].rx then
tab[#tab + 1] = data[i].address
end
end
if #tab > 0 then
return true, tab
else
return false
end
end
else
print("type参数错误")
gg.toast("type参数错误")
os.exit()
end
else
print("memory or array参数错误")
gg.toast("memory or array参数错误")
os.exit()
end
end
function app.memoryread(addr, type)
local t = {}
t[1] = {}
t[1].address = addr
t[1].flags = type
if #t > 0 then
return true, gg.getValues(t)[1].value
else
return false
end
end
function app.memorywrite(addr, type, value, freeze)
local t = {}
t[1] = {}
t[1].address = addr
t[1].flags = type
t[1].value = value
if #t > 0 then
if Assert(freeze) then
t[1].freeze = freeze
--gg.setValues(t)
return gg.addListItems(t)
else
return gg.setValues(t)
end
else
return false
end
end


gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("67109377;67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
revert = gg.getResults(20000, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(20000, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
	if v.flags == gg.TYPE_DWORD then
		v.value = "0"
		v.freeze = true
	end
end
gg.addListItems(t)
t = nil
 gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("2136~2139", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
revert = gg.getResults(20000, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(20000, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
	if v.flags == gg.TYPE_DWORD then
		v.value = "0"
		v.freeze = true
	end
end
gg.addListItems(t)
t = nil
 gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("65538", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
revert = gg.getResults(20000, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(20000, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
	if v.flags == gg.TYPE_DWORD then
		v.value = "0"
		v.freeze = true
	end
end
gg.addListItems(t)
t = nil
gg.clearResults()
gg.toast("Coded by @VolcanoCCA")
gg.alert("Bypass Activated by CCA")
end



function bypass()
local mem = 0
function getMemCpp()
	gg.setRanges(gg.REGION_CODE_APP)
	local alloc = gg.getRangesList("libUE4.so")
	for i in ipairs(alloc) do
		if alloc[i].type == "r-xp" and alloc[i].state == "Xa" then
			if mem == 0 then
				mem = alloc[i].start
				break
			end
		end
	end
end

getMemCpp()
if mem == 0 then
		gg.alert("PUBG Mobile is not running")
		gg.toast("Carbine Cheating Arena ™")
		print("www.t.me/CarbineCheatingArena")
		os.exit()
end
-- Volcano CCA

SVG(false)
gg.setRanges(gg.REGION_C_ALLOC)
SN('"2.2958874e-41"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber('"2.2958874e-41"', gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)

revert = gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(1, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
	if v.flags == gg.TYPE_DWORD then
		v.value = '"0,5"'
		v.freeze = true
	end
end
gg.addListItems(t)
t = nil
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN('"67109633;67109377"', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber('"67109633;67109377"', gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)

revert = gg.getResults(11084001, nil, nil, nil, nil, nil, nil, nil, nil)
local t = gg.getResults(11084001, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
	if v.flags == gg.TYPE_DWORD then
		v.value = '"0,5"'
		v.freeze = true
	end
end
gg.addListItems(t)
t = nil
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("12547", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
for i, i in ipairs((gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil))) do
  if i.flags == gg.TYPE_DWORD then
  end
end
gg.addListItems((gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)))
gg.clearResults()
gg.toast("Coded by @VolcanoCCA")
gg.alert("Bypass Activated by CCA")
end

function bypass2()
function NotXSplit(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find (szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len (szFullString)) break end nSplitArray[nSplitIndex] = string.sub (szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len (szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function NotXGC(NotXSZ, xXNotXx) for x = 1, #(xXNotXx) do xgpy = NotXSZ + xXNotXx[x]["Ná´á´›XOÒ“Ò“"] xglx = xXNotXx[x]["Ná´á´›XTÊá´˜á´‡"] xgsz = xXNotXx[x]["Ná´á´›XFÉªÉ´á´…"] xgdj = xXNotXx[x]["Ná´á´›XFÊ€á´‡á´‡á´¢á´‡"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function XNotX(XxXNotXxX) gg.clearResults() gg.setRanges(XxXNotXxX[1]["Ná´á´›XRá´€É´É¢á´‡"]) SN(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) if gg.getResultCount() == 0 then gg.toast("\n" .. XxXNotXxX[2]["Ná´á´›XSá´‡á´€Ê€á´„Êœ"] .. " \n Vá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…") else gg.refineNumber(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) gg.refineNumber(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) gg.refineNumber(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) gg.refineNumber(XxXNotXxX[3]["Ná´á´›XFÉªÉ´á´…"], XxXNotXxX[3]["Ná´á´›XTÊá´˜á´‡"]) if gg.getResultCount() == 0 then gg.toast("\n" .. XxXNotXxX[2]["Ná´á´›XSá´‡á´€Ê€á´„Êœ"] .. " \nVá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(XxXNotXxX) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + XxXNotXxX[v]["Ná´á´›XOÒ“Ò“"] pysz[1].flags = XxXNotXxX[v]["Ná´á´›XTÊá´˜á´‡"] NotXSZ = gg.getValues(pysz) pdpd = XxXNotXxX[v]["Ná´á´›XRá´‡Ò“ÉªÉ´á´…"] .. ";" .. NotXSZ[1].value szpd = NotXSplit(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then NotXSZ = sl[i].address NotXGC(NotXSZ, xXNotXx) end end if xgjg == true then gg.toast("\n" .. XxXNotXxX[2]["Ná´á´›XSá´‡á´€Ê€á´„Êœ"] .. "\n Vá´€ÊŸá´œá´‡ Fá´á´œÉ´á´…" .. xgsl .. "") else gg.toast("\n" .. XxXNotXxX[2]["Ná´á´›XSá´‡á´€Ê€á´„Êœ"] .. "\n Vá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…") end end end end function SearchWrite(Search, Write, Type) gg.clearResults() SVG(false) SN(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) gg.toast("\n Aá´„á´›Éªá´ á´€á´›á´‡á´… Sá´œá´„á´„á´‡ss \n Vá´€ÊŸá´œá´‡ Fá´á´œÉ´á´… " ..#t.. "") gg.addListItems(t) else gg.toast("\n Aá´„á´›Éªá´ á´€á´›á´‡á´… Fá´€ÉªÊŸá´‡á´…\n Vá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…", false) return false end else gg.toast("\n Aá´„á´›Éªá´ á´€á´›á´‡á´… Fá´€ÉªÊŸá´‡á´…\n Vá´€ÊŸá´œá´‡ Ná´á´› Fá´á´œÉ´á´…") return false end end local gg = gg
gg.clearResults()
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("1401", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("1401", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("1401", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_QWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_QWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.sleep(1401)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_QWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("70658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("133378", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("67109633", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_QWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134658", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
SN("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("134914", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
local CCAxVOLCANO = gg.getResults(140701)
for i, v in ipairs(CCAxVOLCANO) do
    CCAxVOLCANO[i].flags = gg.TYPE_DWORD
    CCAxVOLCANO[i].value = '0'
    CCAxVOLCANO[i].freeze = true
end
gg.addListItems(CCAxVOLCANO)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
SVG(false)
gg.clearResults()
gg.toast("Coded by @VolcanoCCA")
gg.alert("Bypass v2 Activated by CCA")
end

function net()
  gg.clearResults()
    gg.setRanges(8)
    SN("1.3132476e-38;1.956023e-35;1.1754945e-37::9", 16, false, 536870912, 0, -1)
  if gg.getResultCount() == 0 then
  else
    SN("1.1754945e-37", 16, false, 536870912, 0, -1)
    table.insert(ODC, gg.getResults(21))
    EA("0", 16)
    table.insert(EDC, gg.getResults(21))
    gg.clearResults()
    gg.sleep(500)
    for x = #ODC, 1, -1 do
      gg.setValues(ODC[x])
    end
    gg.toast("Success")
  end
  end

  function Off2()
    for x = #EDC, 1, -1 do
      gg.setValues(EDC[x])
    end
    gg.sleep(1000)
    for x = #ODC, 1, -1 do
      gg.setValues(ODC[x])
  end
end
  
  function Off3()
    for x = #ODC, 1, -1 do
      gg.setValues(ODC[x])
  end
end
  
  ODC = {}
  EDC = {}

function kedip()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
SN("6.50000333786;1.1202013e-19;3.7615819e-37;2::", 16, false, 536870912, 0, -1)
SN("2", 16, false, 536870912, 0, -1)
gg.getResults(1)
EA("99999", 16)
gg.clearResults()
gg.toast("Fix Blink\nTelegram Channel CarbineCheatingArena")
end

function bidik()
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("-1228926272664220957", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("-1228926272664220957", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("E00", -1, gg.TYPE_QWORD, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("-1228926272664220957", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("-1228926276669014016", gg.TYPE_QWORD)
gg.toast('Aimbot Active\nTelegram Channel CarbineCheatingArena')
end

function item()
if item == off then
gg.clearResults()
    if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-7.00649232e-45",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,0,-1)
gg.refineAddress("38",-1,gg.TYPE_FLOAT,gg.SIGN_EQUAL,0,-1)
ITEM1=gg.getResults(1337)
EA("5444",gg.TYPE_FLOAT)
gg.clearResults()
SN("-3.12839322e-39",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,0,-1)
gg.refineAddress("38",-1,gg.TYPE_FLOAT,gg.SIGN_EQUAL,0,-1)
ITEM2=gg.getResults(1337)
EA("5444",gg.TYPE_FLOAT)
gg.clearResults()
item = on
else
gg.setValues(ITEM1)
gg.setValues(ITEM2)
item = off
end
end

function less()
gg.clearResults() 
gg.setRanges(16384) 
gg.searchNumber("-1 331 928 324 405 720 525", 32, false, gg.SIGN_EQUAL, 0, -1) 
gg.refineAddress("AF8", -1, 32, gg.SIGN_EQUAL, 0, -1) 
gg.getResults(10) 
gg.editAll("-1 331 928 328 390 574 080", 32) 
gg.clearResults() 
gg.searchNumber("-1 387 800 265 460 020 720", 32, false, gg.SIGN_EQUAL, 0, -1) 
gg.refineAddress("7B8", -1, 32) 
gg.getResults(10) 
gg.editAll("-1 387 800 268 364 578 816", 32) 
gg.clearResults()
gg.searchNumber("4 827 858 804 535 200 272", 32, false, gg.SIGN_EQUAL, 0, -1) 
gg.getResults(10) 
gg.editAll("4 827 858 800 541 171 712", 32) 
gg.clearResults()
gg.toast("Less Activate\nTelegram : @VolcanoCCA")
end

function data()
gg.clearResults()
    gg.setRanges(8)
    gg.searchNumber("1.3132476e-38;1.956023e-35;1.1754945e-37::9", 16, false, 536870912, 0, -1)
  if gg.getResultCount() == 0 then
  else
    gg.searchNumber("1.1754945e-37", 16, false, 536870912, 0, -1)
    table.insert(ODC, gg.getResults(21))
    gg.editAll("0", 16)
    table.insert(EDC, gg.getResults(21))
    gg.clearResults()
    gg.sleep(500)
    for x = #ODC, 1, -1 do
      gg.setValues(ODC[x])
    end
    gg.toast("Success\n Coded by @VolcanoCCA")
  end
  end

  function Off2()
    for x = #EDC, 1, -1 do
      gg.setValues(EDC[x])
    end
    gg.sleep(1000)
    for x = #ODC, 1, -1 do
      gg.setValues(ODC[x])
  end
end
  
  function Off3()
    for x = #ODC, 1, -1 do
      gg.setValues(ODC[x])
  end
end
  
  ODC = {}
  EDC = {}
  

function CCA()
Volcano90 = gg.multiChoice({
" Magic Bullet Only No HS | Spawn 1x",
" Headshot 𝟏𝟎𝟎% | Spawn 1x",
" Headshot 𝟗𝟓% | Spawn 1x",
" AimLock | Spawn 1x",
" Less Recoil | Lobby 1x",
" BlackSky | Spawn Island (𝐄𝐯𝐞𝐫𝐲 𝐌𝐚𝐭𝐜𝐡)",
" Antenna | Spawn Island",
" Fix Blink Wallhack",
" Wallhack Item",
" No Grass",
" No Fog",
" Back"
},nil,"Telegram Channel : @CarbineCheatingArena \n Coded by @VolcanoCCA\n")
if Volcano90 == nil then else
if Volcano90[1] == true then mb() end
if Volcano90[2] == true then C3() end
if Volcano90[3] == true then C4() end
if Volcano90[4] == true then bidik() end
if Volcano90[5] == true then less() end
if Volcano90[6] == true then bs() end
if Volcano90[7] == true then antena() end
if Volcano90[8] == true then kedip() end
if Volcano90[9] == true then item() end
if Volcano90[10] == true then nograss() end
if Volcano90[11] == true then nofog() end
if Volcano90[12] == true then START() end
end
Volcano = -1
end

function nograss()
gg.toast("Use In Game...")
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
SN(":Default__MaterialExpressionLandscapeGrassOutput", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(500)
EA("0", gg.TYPE_BYTE)
gg.clearResults()
  qmnb = {
{["memory"] = 4},
{["name"] = ""},
{["value"] = 743073927, ["type"] = 4},
{["lv"] = 33555456, ["offset"] = 4, ["type"] = 4},
{["lv"] = 537395204, ["offset"] = 8, ["type"] = 4},
}
qmxg = {
{["value"] = 0, ["offset"] = 4, ["type"] = 4},
}
xqmnb(qmnb)
  gg.toast("No Grass Successfully Activated...")
end
function nofog()
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("-1759781550398895551", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("-1759781550398895551", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("098", -1, gg.TYPE_QWORD, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("-1759781550398895551", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1401)
gg.editAll("-1759781554395021312", gg.TYPE_QWORD)
gg.toast("️ɴᴏ ғᴏɢ ᴀᴄᴛɪᴠᴀᴛᴇᴅ...")
end

function SNAPDRAGON()
  WALL11 = gg.multiChoice({
  "Wallhack & Colors 𝐒𝐃 𝟒𝟑𝟓-𝟕𝟎𝟎",
  "Wallhack & Colors 𝐒𝐃 𝟕𝟎𝟎-𝟖𝟓𝟓",
  "Back"
},nil,"Telegram Channel : @CarbineCheatingArena \n Coded by @VolcanoCCA\n")
  if WALL11 == nil then
  else
    if WALL11[1] == true then
      wh1()
    end
    if WALL11[2] == true then
      wh2()
    end
    if WALL11[3] == true then
      START()
    end
  end
  Volcano = -1
end

function wh1()
  gg.clearResults()
    if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-2147086191", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("4C8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("1168777216", gg.TYPE_DWORD)
gg.clearResults()
   if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-2145644352", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("7E0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("1168777216", gg.TYPE_DWORD)
gg.clearResults()
    if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("7,41529732e-29", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("0", gg.TYPE_DWORD)
gg.clearResults()
    if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("6", gg.TYPE_DWORD)
gg.clearResults()
end

function wh2()
  gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-2145644340", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("7E0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
EA("1168777216", gg.TYPE_DWORD)
gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("-2147483636", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("4F8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
EA("1168777216", gg.TYPE_DWORD)
gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("8199", gg.TYPE_DWORD)
gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("120", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("8199", gg.TYPE_DWORD)
gg.clearResults()
 if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
SN("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("128", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1337)
EA("8200", gg.TYPE_DWORD)
gg.clearResults()
if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
  SN("1 078 984 714", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1) 
KARARWALL3=gg.getResults(100) 
EA("-1", gg.TYPE_DWORD) 
gg.clearResults()
end


function bs()
gg.clearResults()
  if gg.REGION_VIDEO == nil then
    VB = gg.REGION_BAD
  else
    VB = gg.REGION_VIDEO
  end
  gg.setRanges(VB)
  SN("1,120,403,456", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.refineAddress("000", -1, gg.TYPE_QWORD, gg.SIGN_EQUAL, 0, -1)
  BSKYOFF1=gg.getResults(30)
  EA("3,266,576,384", gg.TYPE_QWORD)
  gg.clearResults()
  gg.setRanges(gg.REGION_ANONYMOUS)
  SN("3.4028235e38;0.05000000075::5", gg.TYPE_FLOAT, false)
  SN("0.05000000075", gg.TYPE_FLOAT, false)
  gg.getResults(30)
  EA("100", gg.TYPE_FLOAT)
  gg.clearResults()
gg.toast("Blacksy\nTelegram Channel CarbineCheatingArena")
end

function C3()
qmnb = {
{["memory"] = 32},
{["name"] = "headshot100"},
{["value"] = 1106509824, ["type"] = 32},
{["lv"] = 4752423507886342144, ["offset"] = -4, ["type"] = 32},
{["lv"] = 4740038608910024704, ["offset"] = -8, ["type"] = 32},
}
qmxg = {
{["value"] = 100, ["offset"] = 0, ["type"] = 16},
{["value"] = 100, ["offset"] = -4, ["type"] = 16},

}
xqmnb(qmnb)
gg.toast("Headshot 100%\nTelegram Channel CarbineCheatingArena")
end

function C4()
qmnb = {
{["memory"] = 32},
{["name"] = "headshot95"},
{["value"] = 1106509824, ["type"] = 32},
{["lv"] = 4752423507886342144, ["offset"] = -4, ["type"] = 32},
{["lv"] = 4740038608910024704, ["offset"] = -8, ["type"] = 32},
}
qmxg = {
{["value"] = 65, ["offset"] = 0, ["type"] = 16},
{["value"] = 65, ["offset"] = -4, ["type"] = 16},

}
xqmnb(qmnb)
gg.toast("Headshot 95%\nTelegram Channel CarbineCheatingArena")
end

function mb()
gg.clearResults()
qmnb = {
{["memory"] = 32},
{["name"] = "MB"},
{["value"] = -4645122389274493664, ["type"] = 32},
{["lv"] = 7.5, ["offset"] = 12, ["type"] = 16},
}
qmxg = {
{["value"] = 100, ["offset"] = 12, ["type"] = 16},
}
xqmnb(qmnb)
gg.toast("Magic bullet!\nTelegram Channel CarbineCheatingArena")
end

function exit()
print("Telegram : https://t.me/CarbineCheatingArena")
print("@VolcanoCCA")
SVG(true)
os.exit()
end

function antena()
qmnb = {
{["memory"] = 32},
{["name"] = "antenna"},
{["value"] = 4804934254803878643, ["type"] = 32},
{["lv"] = -4410762456449774017, ["offset"] = 4, ["type"] = 32},
{["lv"] = 4575657222473777152, ["offset"] = 12, ["type"] = 32},
}
qmxg = {
{["value"] = 4610560119594024960, ["offset"] = 0, ["type"] = 32},
{["value"] = -4410762456495030272, ["offset"] = 4, ["type"] = 32},
{["value"] = 4575657222557253632, ["offset"] = 12, ["type"] = 32},

}
xqmnb(qmnb)
  gg.toast("Antenna Activated\nTelegram Channel CarbineCheatingArena")
end


function wh()
  VolcanoXS = gg.multiChoice({
    " Wallhack Snap 625",
    " Wallhack Snap 636",
    " Wallhack Snap 660",
    " Wallhack Snap 665",
    " Wallhack Snap 710",
    " Wallhack Snap 835",
    " Wallhack Snap 845",
    " Wallhack Snap 855 V1",
    " Wallhack Snap 855 V2",
    " Color Snapdragon 855 HD Red",
    " Color Yellow Snap 855 Smooth",
    " Color Yellow Snap 845 V1",
    " Color Yellow Snap 845 V2",
    " Color Green Snap 845",
    " Color Yellow Snap 710",
    " Color Snap 665",
    " Color Yellow Fix 660",
    " Color Yellow Universal",
    " Color Red Universal",
    " Color Green 660",
    " Wallhack & Colors 𝐒𝐃 𝟒𝟑𝟓-𝟕𝟎𝟎",
    " Wallhack & Colors 𝐒𝐃 𝟕𝟎𝟎-𝟖𝟓𝟓",
    " Back"
}, nil, "Telegram : CarbineCheatingArena\nUse In Spawn Island\nMake Sure Graphic Set To Smooth")
if VolcanoXS == nil then else
if VolcanoXS[1] == true then wh625() end
if VolcanoXS[2] == true then wh636() end
if VolcanoXS[3] == true then wh660() end
if VolcanoXS[4] == true then wh675() end
if VolcanoXS[5] == true then wh710() end
if VolcanoXS[6] == true then wh835() end
if VolcanoXS[7] == true then wh845() end
if VolcanoXS[8] == true then wh855() end
if VolcanoXS[9] == true then wh855v2() end
if VolcanoXS[10] == true then bc855() end
if VolcanoXS[11] == true then kuning855() end
if VolcanoXS[12] == true then kuning845() end
if VolcanoXS[13] == true then kuning845v2() end
if VolcanoXS[14] == true then hijau845() end
if VolcanoXS[15] == true then kuning710() end
if VolcanoXS[16] == true then warna675() end
if VolcanoXS[17] == true then kuning660() end
if VolcanoXS[18] == true then kuning() end
if VolcanoXS[19] == true then merah() end
if VolcanoXS[20] == true then green675() end
if VolcanoXS[21] == true then wh1() end
if VolcanoXS[22] == true then wh2() end
if VolcanoXS[23] == true then START() end


end
Volcano = -1
end
function kuning710()
  gg.setRanges(gg.REGION_BAD)
  gg.searchNumber("1.3912525e-19F;8200;96", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("6", gg.TYPE_DWORD)
  gg.clearResults()
  gg.toast("Color Yellow 710")
end

function bc855()
gg.clearResults()
gg.setRanges(gg.REGION_BAD or gg.REGION_VIDEO)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("2A0")
local MM2512 = gg.getResults(1)
if MM2512[1] ~= nil then
MM2512[1].address = MM2512[1].address
MM2512[1].flags = 4
MM2512[1].value = 7
gg.setValues(MM2512)
end
gg.clearResults()
gg.setRanges(gg.REGION_BAD or gg.REGION_VIDEO)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("270")
local MM2512 = gg.getResults(1)
if MM2512[1] ~= nil then
MM2512[1].address = MM2512[1].address
MM2512[1].flags = 4
MM2512[1].value = 7
gg.setValues(MM2512)
gg.toast("Color HD 855 Red")
end
end

function wh855v2()
gg.clearResults()
gg.setRanges(gg.REGION_BAD or gg.REGION_VIDEO)
gg.searchNumber("1.33123354e-43;2;1.66231134e-19;9.21942286e-41:21", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("WH 855 V2")
end

function wh625()
  gg.clearResults()
  gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
  gg.searchNumber("135,215D;4,140D;3.7615819e-37;2::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("130", gg.TYPE_FLOAT)
  gg.clearResults()
  gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
  gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("130", gg.TYPE_FLOAT)
  gg.clearResults()
  gg.toast("Telegram Channel : CarbineCheatingArena ")
end

function wh675()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", 16, false, 536870912, 0, -1)
gg.refineNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(999)
gg.editAll("120", 16)
gg.clearResults()
gg.toast("Wallhack 665")
end

function warna675()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201",gg.TYPE_DWORD,false,gg.SIGN_EQUAL,0,-1)
gg.searchNumber("8201",gg.TYPE_DWORD,false,gg.SIGN_EQUAL,0,-1)
gg.getResults(15)
gg.editAll("7",gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Colour Green SD665 activated!")
end

function wh710()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("1.4912565e-19;2.0;1.6623113e-19:9", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("138", 16)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::29", 16, false, 536870912, 0, -1)
gg.searchNumber("2", 16, false, 536870912, 0, -1)
gg.getResults(20)
gg.editAll("138", 16)
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("1,081,081,865;8,200;1,446,128;348,401:21", 4, false, 536870912, 0, -1)
gg.searchNumber("8200", 4, false, 536870912, 0, -1)
gg.getResults(2)
gg.editAll("7", 4)
gg.clearResults()
gg.toast("Wallhack 710 Activated")
end

function less()
gg.clearResults()
gg.setRanges(gg.REGION_C_DATA)
gg.searchNumber("-2.2673448e24;-1.36203639e28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("-1.36203639e28", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(99)
gg.editAll("0", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.toast("Fix Less Recoil Activated\nTelegram Channel : CarbineCheatingArena")
end

function wh845()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2.0;-1.0;0.0;1.0;-127.0;0.24022650719;0.69314718246;0.00999999978::29",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,0,-1)
gg.searchNumber("2",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,0,-1)
gg.getResults(30)
gg.editAll("120",gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2.4382593e-43;1.3312335e-43;2::",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,0,-1)
gg.searchNumber("2",gg.TYPE_FLOAT,false,gg.SIGN_EQUAL,0,-1)
gg.getResults(30)
gg.editAll("120",gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Telegram Channel : CarbineCheatingArena")
end

function wh855()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("95D;2;9.2194229e-41::100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2;-1;0;1;-127;0.24022650719;0.69314718246;0.00999999978::30", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack 855 V1")
end


function kuning855()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0A8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1000)
gg.editAll("8198", gg.TYPE_DWORD)
gg.clearResults()
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1000)
gg.editAll("8199", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Yellow 855 Activated")
end

function wh835()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Telegram Channel : CarbineCheatingArena ")
end

function wh660()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("2;1.8947657e-40;5.8013756e-42", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber("2.718519e-43;3.7615819e-37;2;-1;1;-127", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.refineNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(10)
gg.editAll("120", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast("Wallhack 660 Activated")
end

function kuning660()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(20)
gg.editAll("8198", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Yellow Body Fix 660 Activated")
end

function hijau845()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8201",gg.TYPE_DWORD,false,gg.SIGN_EQUAL,0,-1)
gg.searchNumber("8201",gg.TYPE_DWORD,false,gg.SIGN_EQUAL,0,-1)
gg.getResults(15)
gg.editAll("7",gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Green 845 V1")
end
 

function kuning845v2()
  gg.searchNumber("8,196D;8,192D;8,200D::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("6", gg.TYPE_DWORD)
  gg.clearResults()
  gg.toast("Yellow 845 V2")
  end
  
function kuning845()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0A8", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1000)
gg.editAll("8198", gg.TYPE_DWORD)
gg.clearResults()
gg.searchNumber("8201", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.refineAddress("0B0", -1, gg.TYPE_DWORD, gg.SIGN_EQUAL, 0, -1)
gg.getResults(1000)
gg.editAll("8199", gg.TYPE_DWORD)
gg.clearResults()
gg.toast("Telegram Channel : CarbineCheatingArena ")
end

function kuning()
gg.clearResults()
  gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
  gg.searchNumber("256;8200;13::150", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("6", gg.TYPE_DWORD)
  gg.clearResults()
gg.toast("Telegram Channel : CarbineCheatingArena ")
end


function merah()
gg.clearResults()
gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
  gg.searchNumber("8,196D;8,192D;8,200D::", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("8200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("7", gg.TYPE_DWORD)
  gg.clearResults()
gg.toast("Telegram Channel : CarbineCheatingArena ")
end


function wh636()
  gg.clearResults()
  gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
  gg.searchNumber("135,215D;4,140D;3.7615819e-37;2::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("130", gg.TYPE_FLOAT)
  gg.clearResults()
  gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
  gg.searchNumber("194D;3.7615819e-37;2;-1;1;-127::", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.searchNumber("2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("130", gg.TYPE_FLOAT)
  gg.clearResults()
  gg.toast("Telegram Channel : CarbineCheatingArena ")
end
function green675()
  gg.clearResults()
  gg.setRanges(gg.REGION_VIDEO or gg.REGION_BAD)
  gg.searchNumber("69,897;147,457;69,739", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
  gg.getResults(10)
  gg.editAll("7", gg.TYPE_DWORD)
  gg.toast("Color Green")
  gg.clearResults()
end



START() 
while true do
  if gg.isVisible(true) then 
     Volcano = 1
    SVG(false)
  end
  if Volcano == 1 then
    START()
  end
 end
